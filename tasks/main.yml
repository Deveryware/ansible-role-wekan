---
- name: Ensure wekan group is created.
  group:
    name: "{{ wekan_group }}"

- name: Ensure wekan user is created
  user:
    name: "{{ wekan_user }}"
    group: "{{ wekan_group }}"
    shell: /bin/sh

- name: Ensure source directory is created
  file:
    path: "{{ __wekan_src_directory }}"
    state: directory
    owner: "{{ wekan_user }}"
    group: "{{ wekan_group }}"

- name: Ensure run directory is created
  file:
    path: "{{ __wekan_run_directory }}"
    state: directory
    owner: "{{ wekan_user }}"
    group: "{{ wekan_group }}"

- name: Check if wekan is already installed
  command: "grep {{ wekan_version }} {{ wekan_run_directory }}/bundle/programs/server/app/app.js"
  register: is_wekan_installed
  changed_when: false
  failed_when: false

- name: Update source code
  block:
  - name: Create the build directory
    file:
      path: "{{ wekan_build_directory }}"
      state: directory
      owner: "{{ wekan_user }}"
      group: "{{ wekan_group }}"

  - name: Ensure git repository is up to date
    git:
      repo: "{{ wekan_git_repository }}"
      version: "{{ wekan_version }}"
      depth: 1
      force: yes
      dest: "{{ wekan_src_directory }}"
    become_user: "{{ wekan_user }}"

  - name: Ensure source and build directories are in sync
    copy:
      src: "{{ wekan_src_directory }}/"
      dest: "{{ wekan_build_directory }}"
      remote_src: yes
      owner: "{{ wekan_user }}"
      group: "{{ wekan_group }}"

  - name: Clean up meteor package-metadata
    file:
      path: "{{ wekan_meteor_warehouse }}/package-metadata/"
      state: absent

  - name: Ensure NPM build dependencies are installed
    npm:
      path: "{{ wekan_build_directory }}"
    become_user: "{{ wekan_user }}"
    environment:
      HTTPS_PROXY: "{{ wekan_proxy | default(omit) }}"

  - name: Copy build script over
    template:
      src: build.sh.j2
      dest: "{{ wekan_build_directory }}/build.sh"
      mode: 0755
      owner: "{{ wekan_user }}"

  - name: Build wekan
    command: ./build.sh
    args:
      chdir: "{{ wekan_build_directory }}"
    become_user: "{{ wekan_user }}"
    environment:
    async: 5400 # Wait 90 minutes for the build to complete
    poll: 0
    register: __wekan_async

  - name: Wait for Wekan to build
    async_status:
      jid: "{{ __wekan_async.ansible_job_id }}"
    become_user: "{{ wekan_user }}"
    register: __wekan_async_result
    until: __wekan_async_result.finished
    retries: 900
    notify: Restart wekan

  - name: Clean up async task
    async_status:
      jid: "{{ __wekan_async.ansible_job_id }}"
      mode: cleanup
    become_user: "{{ wekan_user }}"

  - name: Remove build script
    file:
      path: "{{ wekan_build_directory }}/build.sh"
      state: absent

  - name: Ensure cfs_access-point.js is patched
    copy:
      src: "{{ wekan_build_directory }}/fix-download-unicode/cfs_access-point.txt"
      dest: "{{ wekan_run_directory }}/bundle/programs/server/packages/cfs_access-point.js"
      remote_src: yes
      owner: "{{ wekan_user }}"
      group: "{{ wekan_group }}"
      mode: 0644

  - name: Ensure NPM run time dependencies are installed
    npm:
      path: "{{ wekan_run_directory }}/bundle/programs/server/"
    become_user: "{{ wekan_user }}"
    environment:
      HTTPS_PROXY: "{{ wekan_proxy | default(omit) }}"

  - name: Remove the build directory
    file:
      path: "{{ wekan_build_directory }}"
      state: absent

  when: is_wekan_installed.rc != 0

- name: Ensure systemd service is installed
  template:
    src: templates/wekan.service.j2
    dest: /etc/systemd/system/wekan.service
  notify:
  - Reload systemd
  - Restart wekan

- name: Ensure wekan is enabled on start up
  service:
    name: wekan
    enabled: yes
    state: started
